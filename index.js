const core = require('@actions/core')
const github = require('@actions/github')
const fs = require('fs').promises
const calendar = require('googleapis')

async function action () {
  // Starting off by pulling in all of our required inputs

  // - GitHub token used for interacting with the GitHub API. Generated by Actions if the user passes `${{ secrets.GITHUB_TOKEN }}`
  const token = core.getInput('github-token')

  // - The various data from user inputs that we're going to use
  const join = core.getInput('markdown-join-instructions')
  const template = core.getInput('markdown-minutes-base')
  const invites = core.getInput('invites')
  const observers = core.getInput('observers')

  // next, setting up Octokit via @actions/github
  const octokit = new github.GitHub(token)
  const context = github.context

  const fetchedTemplate = await fs.readFile(template)

  // now, create a meeting issue
  try {
    await octokit.issues.create({
      ...context.repo,
      title: 'My Meeting',
      body: fetchedTemplate
    })
  } catch (error) {
    process.exitCode = 1
    core.setFailed(error)
  }
}

action()
